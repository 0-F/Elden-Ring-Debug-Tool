<UserControl x:Class="Elden_Ring_Debug_Tool_WPF.Views.HotkeyView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Elden_Ring_Debug_Tool_WPF.Views" 
             xmlns:vm="clr-namespace:Elden_Ring_Debug_Tool_ViewModels.ViewModels;assembly=Elden-Ring-Debug-Tool-ViewModels" 
             xmlns:svm="clr-namespace:Elden_Ring_Debug_Tool_ViewModels.ViewModels.SubViewModels;assembly=Elden-Ring-Debug-Tool-ViewModels" 
             xmlns:wpfTool="http://schemas.xceed.com/wpf/xaml/toolkit" 
             xmlns:controls="clr-namespace:Elden_Ring_Debug_Tool_WPF.Controls"
             mc:Ignorable="d"
             d:DesignHeight="600" d:DesignWidth="400" Background="LightGray"
             d:DataContext="{d:DesignInstance vm:HotkeyViewViewModel, IsDesignTimeCreatable=True}">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <StackPanel Grid.Row="0" Margin="0,10,0,0">
            <Separator Visibility="Hidden"/>
            <CheckBox Content="Enable Hotkeys" x:Name="cbxEnableHotkeys"/>
            <Separator Visibility="Hidden"/>
            <CheckBox Content="Handle Hotkeys" x:Name="cbxHandleHotkeys"/>
            <Separator Visibility="Hidden"/>
            <Separator Margin="0,10,0,10"/>
            <Label Content="Hotkeys"/>
            <Grid>
                <wpfTool:AutoSelectTextBox Height="20" Text="{Binding HotkeyFilter, UpdateSourceTrigger=PropertyChanged}" AutoSelectBehavior="OnFocus" TextAlignment="Center"/>
                <Label Foreground="LightSlateGray" Content="Search..." IsEnabled="False" Margin="5,0,0,0" IsHitTestVisible="False"
                           Visibility="{Binding HotkeyFilter, Converter={StaticResource ResourceKey=StringToVisibilityConverter}}" HorizontalContentAlignment="Center"/>
            </Grid>

        </StackPanel>
            <ScrollViewer Grid.Row="1"  CanContentScroll="False" >
            <StackPanel>

                <DataGrid x:Name="DG" ItemsSource="{Binding HotkeyCollectionView}" Grid.Row="2" Grid.Column="2" AutoGenerateColumns="False" d:DataContext="{d:DesignInstance svm:HotkeyViewModel, IsDesignTimeCreatable=True}"
                          HorizontalScrollBarVisibility="Visible" CanUserAddRows="False"  >
                    <DataGrid.GroupStyle>
                        <GroupStyle>
                            <GroupStyle.ContainerStyle>
                                <Style TargetType="{x:Type GroupItem}">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type GroupItem}">
                                                <StackPanel>
                                                    <Border BorderThickness="1" Height="23" Background="Gray"  BorderBrush="Black"  >

                                                        <StackPanel Orientation="Horizontal" Margin="10,0,0,0">
                                                                <TextBlock Text="{Binding Name}" />
                                                                <TextBlock Text="{Binding ItemCount, StringFormat=Count: {0}}" Margin="30,0,0,0" />
                                                            </StackPanel>
                                                        </Border>

                                                    <ItemsPresenter />

                                                </StackPanel>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </GroupStyle.ContainerStyle>
                        </GroupStyle>
                    </DataGrid.GroupStyle>
                    <DataGrid.Resources>
                        <Style TargetType="{x:Type DataGrid}">
                            <Setter Property="Background" Value="Transparent"/>
                        </Style>
                        <Style TargetType="{x:Type DataGridRow}">
                            <Setter Property="Background" Value="Transparent"/>
                        </Style>
                        <Style TargetType="{x:Type DataGridRowHeader}">
                            <Setter Property="Background" Value="Transparent"/>
                        </Style>
                        <Style TargetType="{x:Type DataGridColumnHeader}">
                            <Setter Property="Background" Value="DarkGray"/>
                            <Setter Property="BorderThickness" Value="1"/>
                            <Setter Property="BorderBrush" Value="Black"/>
                            <Setter Property="HorizontalContentAlignment" Value="Center"/>
                        </Style>
                    </DataGrid.Resources>
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="Name" Binding="{Binding Name}" MinWidth="150" Width="*"/>
                        <DataGridTemplateColumn Header="Toggle State" MinWidth="75" Width="Auto">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate >
                                    <ToggleButton Height="25" Width="25" Style="{StaticResource ToggleButtonPower}" 
                                                  Background="{Binding Background, RelativeSource={RelativeSource AncestorType=UserControl}}" 
                                                  IsChecked="{Binding ToggleableCommand.State}" Command="{Binding Command}" Visibility="{Binding ToggleableCommand, Converter={StaticResource NullObjectToVisibilityConverter}}" >
                                    </ToggleButton>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTemplateColumn Header="Hotkey" MinWidth="100" Width="Auto" >
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBox Margin="10,0,10,0" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" KeyUp="TextBox_KeyUp"  MouseEnter="TextBox_MouseEnter" MouseLeave="TextBox_MouseLeave" Text="{Binding Key, Converter={StaticResource KeyToStringConverter}, UpdateSourceTrigger=LostFocus}" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <!--<DataGridComboBoxColumn Header="Parameter" MinWidth="120" Width="120"/>-->
                    </DataGrid.Columns>
                </DataGrid>
            </StackPanel>
                <!--<ItemsControl Background="LightGray" ItemsSource="{Binding FieldCollectionView}" AlternationCount="2">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel/>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    --><!--<ItemsControl.ItemTemplateSelector>
                            <dts:FieldDataTemplateSelector 
                    NumericSigned32="{StaticResource NumericSigned32}"
                    NumericSigned16="{StaticResource NumericSigned16}"
                    NumericSigned8="{StaticResource NumericSigned8}"
                    NumericUnsigned32="{StaticResource NumericUnsigned32}"
                    NumericUnsigned16="{StaticResource NumericUnsigned16}"
                    NumericUnsigned8="{StaticResource NumericUnsigned8}"
                    SingleField="{StaticResource SingleField}"
                    BitField="{StaticResource BitField}"
                    FixedStr="{StaticResource FixedStr}"/>
                        </ItemsControl.ItemTemplateSelector>--><!--

                </ItemsControl>-->
            </ScrollViewer>
    </Grid>
</UserControl>
